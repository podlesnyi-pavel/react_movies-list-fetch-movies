{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","fetch","then","response","json","request","FindMovie","addMovie","useState","setTitle","setMovie","isShowError","setIsShowError","onSubmit","event","preventDefault","htmlFor","type","id","value","onChange","target","placeholder","onClick","Response","App","setMovies","some","item","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"6TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,cCRRC,G,MAAW,SAACC,GAAD,OALD,SAACA,GACtB,OAAOC,MAAM,GAAD,OAHG,6CAGH,YAAgBD,IACzBE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAGUC,CAAQL,KCGtCM,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAOR,EAAP,KAAcS,EAAd,KACA,EAA0BD,mBAAuB,MAAjD,mBAAOpB,EAAP,KAAcsB,EAAd,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAyBA,OACE,qCACE,uBAAMvB,UAAU,aAAawB,SARZ,SAACC,GACpBA,EAAMC,iBACNR,EAASnB,GACTqB,EAAS,KAKP,UACE,sBAAKpB,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQ2B,QAAQ,cAAjC,wBAEE,qBAAK3B,UAAU,UAAf,SACE,uBACE4B,KAAK,OACLC,GAAG,cACHC,MAAOnB,EACPoB,SAlCY,SAACN,GACzBL,EAASK,EAAMO,OAAOF,QAkCVG,YAAY,0BACZjC,UAAU,0BAKdD,GAASuB,GACT,mBAAGtB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,kBACVkC,QAjDa,WACvBxB,EAASC,GACNE,MAAK,SAAAC,GACsB,UAAtBA,EAASqB,UACXZ,GAAe,GACfF,EAAS,QAETE,GAAe,GACfF,EAASP,QAsCP,4BASF,qBAAKd,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,oBAFZ,qCAUK,OAAVD,GACC,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WCnFfqC,EAAM,WACjB,MAA4BjB,mBAAkB,IAA9C,mBAAOZ,EAAP,KAAe8B,EAAf,KAQA,OACE,sBAAKrC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWkB,SAZA,SAACnB,GACZA,IAAUQ,EAAO+B,MAAK,SAAAC,GAAI,OAAIA,EAAK9B,SAAWV,EAAMU,WACtD4B,GAAU,SAAAG,GAAU,4BAAQA,GAAR,CAAoBzC,gBCN9C0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.807d1b99.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=bb703082&t';\n\nexport const request = (title: string) => {\n  return fetch(`${BASE_URL}=${title}`)\n    .then((response) => response.json());\n};\n\nexport const getMovie = (title: string) => request(title);\n","import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (movie: Movie | null) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isShowError, setIsShowError] = useState(false);\n\n  const handleChangeTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const findMovieByTitle = () => {\n    getMovie(title)\n      .then(response => {\n        if (response.Response === 'False') {\n          setIsShowError(true);\n          setMovie(null);\n        } else {\n          setIsShowError(false);\n          setMovie(response);\n        }\n      });\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addMovie(movie);\n    setTitle('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                value={title}\n                onChange={handleChangeTitle}\n                placeholder=\"Enter a title to search\"\n                className=\"input is-danger\"\n              />\n            </div>\n          </label>\n\n          {!movie && isShowError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovieByTitle}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie !== null && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie | null) => {\n    if (movie && !movies.some(item => item.imdbID === movie.imdbID)) {\n      setMovies(prevMovies => [...prevMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}